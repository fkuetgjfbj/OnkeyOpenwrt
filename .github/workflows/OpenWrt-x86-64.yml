#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: OpenWrt-x86-64

on:
  repository_dispatch:
  release:
    types: published
#  push:
#    branches:
#      - main
#    paths:
#      - '5.config'
  schedule:
    - cron: 0 22 */2 * * 
  watch:
    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: config-x86test
  DIY_SH: diy-x86test.sh
  FREE_UP_DISK: false
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: 初始环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev curl patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "$TZ"    

    - name: 下载源码
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt 
        sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
        # sed -i 's/coolsnowwolf/sirpdboy/g' ./feeds.conf.default
        ./scripts/feeds update -a && ./scripts/feeds install -a
    - name: 增加存储
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/build_dir/host openwrt/build_dir /mnt/openwrt/dl /mnt/openwrt/staging_dir
        ln -s /mnt/openwrt/build_dir/hostpkg openwrt/build_dir/hostpkg
        ln -s /mnt/openwrt/build_dir/host openwrt/build_dir/host
        ln -s /mnt/openwrt/dl openwrt/dl
        ln -s /mnt/openwrt/staging_dir openwrt/staging_dir

    - name: 导入自定义
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        [ -e $DIY_SH ] && chmod +x $DIY_SH && cd openwrt && ../$DIY_SH
        chmod -R 775 .
    - name: SSH连接
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: 下载软件包
      id: package
      run: |
        cd openwrt && make defconfig && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 固件编译
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        echo "FILE_DATE=$(date +"%Y-%m%d-%H%M")" >> $GITHUB_ENV
        cp -f .config ./bin/targets/*/*/
        echo "======================="
        echo "磁盘使用情况:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin

    - name: 筛选固件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
          mkdir -p ./mini/firmware
          mkdir -p ./mini/package
          cp -rf $(find ./openwrt/bin/packages/ -type f -name "*.ipk") ./mini/package
          find ./openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./mini/firmware
          cd ./mini/firmware
          gzip *.img
    - name: 上传固件
      uses: actions/upload-artifact@main
      with:
           name: SirpdboyOpenWrt-mini-Firmware
           path: ./mini/firmware
    - name: 上传固件IPK
      uses: actions/upload-artifact@main
      with:
          name: SirpdboyOpenWrt-mini-Ipk
          path: ./mini/package
    - name: 固件上传到奶牛快传
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
         curl -fsSL git.io/file-transfer | sh
         ./transfer cow --block 2621440 -s -p 64 --no-progress ./mini/firmware 2>&1 | tee cowtransfer.log
         echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
    - name: 固件上传到WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ./mini/firmware 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
